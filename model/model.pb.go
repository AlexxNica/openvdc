// Code generated by protoc-gen-go.
// source: model.proto
// DO NOT EDIT!

/*
Package model is a generated protocol buffer package.

It is generated from these files:
	model.proto

It has these top-level messages:
	Instance
	Resource
	NoneTemplate
	VMTemplate
*/
package model

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ResourceType int32

const (
	ResourceType_NONE ResourceType = 0
	ResourceType_VM   ResourceType = 1
)

var ResourceType_name = map[int32]string{
	0: "NONE",
	1: "VM",
}
var ResourceType_value = map[string]int32{
	"NONE": 0,
	"VM":   1,
}

func (x ResourceType) String() string {
	return proto.EnumName(ResourceType_name, int32(x))
}
func (ResourceType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Instance_State int32

const (
	Instance_REGISTERED   Instance_State = 0
	Instance_QUEUED       Instance_State = 1
	Instance_STARTING     Instance_State = 2
	Instance_RUNNING      Instance_State = 3
	Instance_STOPPING     Instance_State = 4
	Instance_STOPPED      Instance_State = 5
	Instance_SHUTTINGDOWN Instance_State = 6
	Instance_TERMINATED   Instance_State = 7
)

var Instance_State_name = map[int32]string{
	0: "REGISTERED",
	1: "QUEUED",
	2: "STARTING",
	3: "RUNNING",
	4: "STOPPING",
	5: "STOPPED",
	6: "SHUTTINGDOWN",
	7: "TERMINATED",
}
var Instance_State_value = map[string]int32{
	"REGISTERED":   0,
	"QUEUED":       1,
	"STARTING":     2,
	"RUNNING":      3,
	"STOPPING":     4,
	"STOPPED":      5,
	"SHUTTINGDOWN": 6,
	"TERMINATED":   7,
}

func (x Instance_State) String() string {
	return proto.EnumName(Instance_State_name, int32(x))
}
func (Instance_State) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type Resource_State int32

const (
	Resource_REGISTERED   Resource_State = 0
	Resource_UNREGISTERED Resource_State = 1
)

var Resource_State_name = map[int32]string{
	0: "REGISTERED",
	1: "UNREGISTERED",
}
var Resource_State_value = map[string]int32{
	"REGISTERED":   0,
	"UNREGISTERED": 1,
}

func (x Resource_State) String() string {
	return proto.EnumName(Resource_State_name, int32(x))
}
func (Resource_State) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

type Instance struct {
	Id         string         `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	ExecutorId string         `protobuf:"bytes,2,opt,name=executor_id,json=executorId" json:"executor_id,omitempty"`
	ResourceId string         `protobuf:"bytes,3,opt,name=resource_id,json=resourceId" json:"resource_id,omitempty"`
	State      Instance_State `protobuf:"varint,4,opt,name=state,enum=model.Instance_State" json:"state,omitempty"`
}

func (m *Instance) Reset()                    { *m = Instance{} }
func (m *Instance) String() string            { return proto.CompactTextString(m) }
func (*Instance) ProtoMessage()               {}
func (*Instance) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Instance) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Instance) GetExecutorId() string {
	if m != nil {
		return m.ExecutorId
	}
	return ""
}

func (m *Instance) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

func (m *Instance) GetState() Instance_State {
	if m != nil {
		return m.State
	}
	return Instance_REGISTERED
}

type Resource struct {
	Id    string         `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Type  ResourceType   `protobuf:"varint,2,opt,name=type,enum=model.ResourceType" json:"type,omitempty"`
	State Resource_State `protobuf:"varint,3,opt,name=state,enum=model.Resource_State" json:"state,omitempty"`
	// Types that are valid to be assigned to Template:
	//	*Resource_None
	//	*Resource_Vm
	Template isResource_Template `protobuf_oneof:"Template"`
}

func (m *Resource) Reset()                    { *m = Resource{} }
func (m *Resource) String() string            { return proto.CompactTextString(m) }
func (*Resource) ProtoMessage()               {}
func (*Resource) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type isResource_Template interface {
	isResource_Template()
}

type Resource_None struct {
	None *NoneTemplate `protobuf:"bytes,500,opt,name=none,oneof"`
}
type Resource_Vm struct {
	Vm *VMTemplate `protobuf:"bytes,501,opt,name=vm,oneof"`
}

func (*Resource_None) isResource_Template() {}
func (*Resource_Vm) isResource_Template()   {}

func (m *Resource) GetTemplate() isResource_Template {
	if m != nil {
		return m.Template
	}
	return nil
}

func (m *Resource) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Resource) GetType() ResourceType {
	if m != nil {
		return m.Type
	}
	return ResourceType_NONE
}

func (m *Resource) GetState() Resource_State {
	if m != nil {
		return m.State
	}
	return Resource_REGISTERED
}

func (m *Resource) GetNone() *NoneTemplate {
	if x, ok := m.GetTemplate().(*Resource_None); ok {
		return x.None
	}
	return nil
}

func (m *Resource) GetVm() *VMTemplate {
	if x, ok := m.GetTemplate().(*Resource_Vm); ok {
		return x.Vm
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Resource) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Resource_OneofMarshaler, _Resource_OneofUnmarshaler, _Resource_OneofSizer, []interface{}{
		(*Resource_None)(nil),
		(*Resource_Vm)(nil),
	}
}

func _Resource_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Resource)
	// Template
	switch x := m.Template.(type) {
	case *Resource_None:
		b.EncodeVarint(500<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.None); err != nil {
			return err
		}
	case *Resource_Vm:
		b.EncodeVarint(501<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Vm); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Resource.Template has unexpected type %T", x)
	}
	return nil
}

func _Resource_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Resource)
	switch tag {
	case 500: // Template.none
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(NoneTemplate)
		err := b.DecodeMessage(msg)
		m.Template = &Resource_None{msg}
		return true, err
	case 501: // Template.vm
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(VMTemplate)
		err := b.DecodeMessage(msg)
		m.Template = &Resource_Vm{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Resource_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Resource)
	// Template
	switch x := m.Template.(type) {
	case *Resource_None:
		s := proto.Size(x.None)
		n += proto.SizeVarint(500<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Resource_Vm:
		s := proto.Size(x.Vm)
		n += proto.SizeVarint(501<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type NoneTemplate struct {
}

func (m *NoneTemplate) Reset()                    { *m = NoneTemplate{} }
func (m *NoneTemplate) String() string            { return proto.CompactTextString(m) }
func (*NoneTemplate) ProtoMessage()               {}
func (*NoneTemplate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type VMTemplate struct {
	Vcpu             int32  `protobuf:"varint,1,opt,name=vcpu" json:"vcpu,omitempty"`
	MemoryGb         int32  `protobuf:"varint,2,opt,name=memory_gb,json=memoryGb" json:"memory_gb,omitempty"`
	ImageTemplateUri string `protobuf:"bytes,3,opt,name=image_template_uri,json=imageTemplateUri" json:"image_template_uri,omitempty"`
}

func (m *VMTemplate) Reset()                    { *m = VMTemplate{} }
func (m *VMTemplate) String() string            { return proto.CompactTextString(m) }
func (*VMTemplate) ProtoMessage()               {}
func (*VMTemplate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *VMTemplate) GetVcpu() int32 {
	if m != nil {
		return m.Vcpu
	}
	return 0
}

func (m *VMTemplate) GetMemoryGb() int32 {
	if m != nil {
		return m.MemoryGb
	}
	return 0
}

func (m *VMTemplate) GetImageTemplateUri() string {
	if m != nil {
		return m.ImageTemplateUri
	}
	return ""
}

func init() {
	proto.RegisterType((*Instance)(nil), "model.Instance")
	proto.RegisterType((*Resource)(nil), "model.Resource")
	proto.RegisterType((*NoneTemplate)(nil), "model.NoneTemplate")
	proto.RegisterType((*VMTemplate)(nil), "model.VMTemplate")
	proto.RegisterEnum("model.ResourceType", ResourceType_name, ResourceType_value)
	proto.RegisterEnum("model.Instance_State", Instance_State_name, Instance_State_value)
	proto.RegisterEnum("model.Resource_State", Resource_State_name, Resource_State_value)
}

func init() { proto.RegisterFile("model.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 458 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x92, 0xd1, 0x6b, 0x9b, 0x50,
	0x14, 0xc6, 0xa3, 0xd1, 0xd4, 0x9e, 0x88, 0xdc, 0x9d, 0x31, 0x10, 0xc6, 0x68, 0x90, 0xc1, 0xba,
	0x6e, 0x24, 0xd0, 0xfd, 0x05, 0x2d, 0x4a, 0xea, 0x43, 0x4c, 0x77, 0xa3, 0x1d, 0xec, 0x25, 0x18,
	0xbd, 0xa4, 0xb2, 0xea, 0x15, 0x73, 0x0d, 0x0d, 0x7b, 0xdf, 0x5f, 0xbc, 0x3d, 0xec, 0x6d, 0x78,
	0xd5, 0x35, 0x65, 0xec, 0xed, 0x7e, 0xe7, 0xfb, 0xdd, 0x73, 0xee, 0xf9, 0xb8, 0x30, 0xce, 0x79,
	0xca, 0x1e, 0xa6, 0x65, 0xc5, 0x05, 0x47, 0x5d, 0x0a, 0xe7, 0x87, 0x0a, 0x86, 0x5f, 0xec, 0x44,
	0x5c, 0x24, 0x0c, 0x2d, 0x50, 0xb3, 0xd4, 0x56, 0x26, 0xca, 0xf9, 0x29, 0x55, 0xb3, 0x14, 0xcf,
	0x60, 0xcc, 0x1e, 0x59, 0x52, 0x0b, 0x5e, 0xad, 0xb3, 0xd4, 0x56, 0xa5, 0x01, 0x7d, 0xc9, 0x97,
	0x40, 0xc5, 0x76, 0xbc, 0xae, 0x12, 0xd6, 0x00, 0xc3, 0x16, 0xe8, 0x4b, 0x7e, 0x8a, 0x1f, 0x40,
	0xdf, 0x89, 0x58, 0x30, 0x5b, 0x9b, 0x28, 0xe7, 0xd6, 0xe5, 0xab, 0x69, 0xfb, 0x84, 0x7e, 0xe2,
	0x74, 0xd5, 0x98, 0xb4, 0x65, 0x9c, 0xef, 0xa0, 0x4b, 0x8d, 0x16, 0x00, 0xf5, 0xe6, 0xfe, 0x2a,
	0xf4, 0xa8, 0xe7, 0x92, 0x01, 0x02, 0x8c, 0x3e, 0x47, 0x5e, 0xe4, 0xb9, 0x44, 0x41, 0x13, 0x8c,
	0x55, 0x78, 0x45, 0x43, 0x3f, 0x98, 0x13, 0x15, 0xc7, 0x70, 0x42, 0xa3, 0x20, 0x68, 0xc4, 0xb0,
	0xb5, 0x96, 0xb7, 0xb7, 0x8d, 0xd2, 0x1a, 0x4b, 0x2a, 0xcf, 0x25, 0x3a, 0x12, 0x30, 0x57, 0x37,
	0x51, 0xd8, 0xdc, 0x72, 0x97, 0x5f, 0x02, 0x32, 0x6a, 0x66, 0x84, 0x1e, 0x5d, 0xf8, 0xc1, 0x55,
	0xe8, 0xb9, 0xe4, 0xc4, 0xf9, 0xad, 0x80, 0x41, 0xbb, 0x87, 0xff, 0x13, 0xc4, 0x3b, 0xd0, 0xc4,
	0xa1, 0x64, 0x32, 0x01, 0xeb, 0xf2, 0x65, 0xb7, 0x45, 0x8f, 0x87, 0x87, 0x92, 0x51, 0x09, 0x3c,
	0xed, 0x3b, 0x7c, 0xb6, 0x6f, 0x4f, 0x3e, 0xdb, 0x17, 0x2f, 0x40, 0x2b, 0x78, 0xc1, 0xec, 0x9f,
	0x0d, 0x3c, 0xfe, 0xdb, 0x36, 0xe0, 0x05, 0x0b, 0x59, 0x5e, 0x3e, 0xc4, 0x82, 0xdd, 0x0c, 0xa8,
	0x64, 0xf0, 0x2d, 0xa8, 0xfb, 0xdc, 0xfe, 0xd5, 0x92, 0x2f, 0x3a, 0xf2, 0x6e, 0x71, 0xc4, 0xa9,
	0xfb, 0xdc, 0x79, 0xff, 0xbf, 0x04, 0x09, 0x98, 0x51, 0x70, 0x54, 0x51, 0xae, 0x01, 0x8c, 0xfe,
	0xb2, 0x63, 0x81, 0x79, 0x3c, 0xd4, 0xf9, 0x06, 0xf0, 0xd4, 0x1a, 0x11, 0xb4, 0x7d, 0x52, 0xd6,
	0x32, 0x0e, 0x9d, 0xca, 0x33, 0xbe, 0x86, 0xd3, 0x9c, 0xe5, 0xbc, 0x3a, 0xac, 0xb7, 0x1b, 0x99,
	0x8a, 0x4e, 0x8d, 0xb6, 0x30, 0xdf, 0xe0, 0x47, 0xc0, 0x2c, 0x8f, 0xb7, 0x6c, 0x2d, 0xba, 0x16,
	0xeb, 0xba, 0xca, 0xba, 0xcf, 0x41, 0xa4, 0xd3, 0xf7, 0x8e, 0xaa, 0xec, 0x62, 0x02, 0xe6, 0x71,
	0x90, 0x68, 0x80, 0x16, 0x2c, 0x03, 0x8f, 0x0c, 0x70, 0x04, 0xea, 0xdd, 0x82, 0x28, 0xd7, 0x67,
	0x5f, 0xdf, 0x6c, 0x33, 0x71, 0x5f, 0x6f, 0xa6, 0x09, 0xcf, 0x67, 0xf1, 0xe3, 0xee, 0x7e, 0xc6,
	0x4b, 0x56, 0xec, 0xd3, 0x64, 0x26, 0x73, 0xd8, 0x8c, 0xe4, 0x97, 0xfe, 0xf4, 0x27, 0x00, 0x00,
	0xff, 0xff, 0x01, 0x52, 0xfc, 0xab, 0xe1, 0x02, 0x00, 0x00,
}
