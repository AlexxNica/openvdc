// Code generated by protoc-gen-go.
// source: model.proto
// DO NOT EDIT!

/*
Package model is a generated protocol buffer package.

It is generated from these files:
	model.proto

It has these top-level messages:
	Instance
	InstanceState
	Resource
	NoneTemplate
	VMTemplate
*/
package model

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ResourceType int32

const (
	ResourceType_NONE ResourceType = 0
	ResourceType_VM   ResourceType = 1
)

var ResourceType_name = map[int32]string{
	0: "NONE",
	1: "VM",
}
var ResourceType_value = map[string]int32{
	"NONE": 0,
	"VM":   1,
}

func (x ResourceType) String() string {
	return proto.EnumName(ResourceType_name, int32(x))
}
func (ResourceType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type InstanceState_State int32

const (
	InstanceState_REGISTERED   InstanceState_State = 0
	InstanceState_QUEUED       InstanceState_State = 1
	InstanceState_STARTING     InstanceState_State = 2
	InstanceState_RUNNING      InstanceState_State = 3
	InstanceState_STOPPING     InstanceState_State = 4
	InstanceState_STOPPED      InstanceState_State = 5
	InstanceState_SHUTTINGDOWN InstanceState_State = 6
	InstanceState_TERMINATED   InstanceState_State = 7
)

var InstanceState_State_name = map[int32]string{
	0: "REGISTERED",
	1: "QUEUED",
	2: "STARTING",
	3: "RUNNING",
	4: "STOPPING",
	5: "STOPPED",
	6: "SHUTTINGDOWN",
	7: "TERMINATED",
}
var InstanceState_State_value = map[string]int32{
	"REGISTERED":   0,
	"QUEUED":       1,
	"STARTING":     2,
	"RUNNING":      3,
	"STOPPING":     4,
	"STOPPED":      5,
	"SHUTTINGDOWN": 6,
	"TERMINATED":   7,
}

func (x InstanceState_State) String() string {
	return proto.EnumName(InstanceState_State_name, int32(x))
}
func (InstanceState_State) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

type Resource_State int32

const (
	Resource_REGISTERED   Resource_State = 0
	Resource_UNREGISTERED Resource_State = 1
)

var Resource_State_name = map[int32]string{
	0: "REGISTERED",
	1: "UNREGISTERED",
}
var Resource_State_value = map[string]int32{
	"REGISTERED":   0,
	"UNREGISTERED": 1,
}

func (x Resource_State) String() string {
	return proto.EnumName(Resource_State_name, int32(x))
}
func (Resource_State) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

type Instance struct {
	Id         string         `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	ExecutorId string         `protobuf:"bytes,2,opt,name=executor_id,json=executorId" json:"executor_id,omitempty"`
	ResourceId string         `protobuf:"bytes,3,opt,name=resource_id,json=resourceId" json:"resource_id,omitempty"`
	LastState  *InstanceState `protobuf:"bytes,4,opt,name=last_state,json=lastState" json:"last_state,omitempty"`
}

func (m *Instance) Reset()                    { *m = Instance{} }
func (m *Instance) String() string            { return proto.CompactTextString(m) }
func (*Instance) ProtoMessage()               {}
func (*Instance) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Instance) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Instance) GetExecutorId() string {
	if m != nil {
		return m.ExecutorId
	}
	return ""
}

func (m *Instance) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

func (m *Instance) GetLastState() *InstanceState {
	if m != nil {
		return m.LastState
	}
	return nil
}

type InstanceState struct {
	State     InstanceState_State        `protobuf:"varint,1,opt,name=state,enum=model.InstanceState_State" json:"state,omitempty"`
	CreatedAt *google_protobuf.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
}

func (m *InstanceState) Reset()                    { *m = InstanceState{} }
func (m *InstanceState) String() string            { return proto.CompactTextString(m) }
func (*InstanceState) ProtoMessage()               {}
func (*InstanceState) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *InstanceState) GetState() InstanceState_State {
	if m != nil {
		return m.State
	}
	return InstanceState_REGISTERED
}

func (m *InstanceState) GetCreatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

type Resource struct {
	Id    string         `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Type  ResourceType   `protobuf:"varint,2,opt,name=type,enum=model.ResourceType" json:"type,omitempty"`
	State Resource_State `protobuf:"varint,3,opt,name=state,enum=model.Resource_State" json:"state,omitempty"`
	// Types that are valid to be assigned to Template:
	//	*Resource_None
	//	*Resource_Vm
	Template isResource_Template `protobuf_oneof:"Template"`
}

func (m *Resource) Reset()                    { *m = Resource{} }
func (m *Resource) String() string            { return proto.CompactTextString(m) }
func (*Resource) ProtoMessage()               {}
func (*Resource) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type isResource_Template interface {
	isResource_Template()
}

type Resource_None struct {
	None *NoneTemplate `protobuf:"bytes,500,opt,name=none,oneof"`
}
type Resource_Vm struct {
	Vm *VMTemplate `protobuf:"bytes,501,opt,name=vm,oneof"`
}

func (*Resource_None) isResource_Template() {}
func (*Resource_Vm) isResource_Template()   {}

func (m *Resource) GetTemplate() isResource_Template {
	if m != nil {
		return m.Template
	}
	return nil
}

func (m *Resource) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Resource) GetType() ResourceType {
	if m != nil {
		return m.Type
	}
	return ResourceType_NONE
}

func (m *Resource) GetState() Resource_State {
	if m != nil {
		return m.State
	}
	return Resource_REGISTERED
}

func (m *Resource) GetNone() *NoneTemplate {
	if x, ok := m.GetTemplate().(*Resource_None); ok {
		return x.None
	}
	return nil
}

func (m *Resource) GetVm() *VMTemplate {
	if x, ok := m.GetTemplate().(*Resource_Vm); ok {
		return x.Vm
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Resource) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Resource_OneofMarshaler, _Resource_OneofUnmarshaler, _Resource_OneofSizer, []interface{}{
		(*Resource_None)(nil),
		(*Resource_Vm)(nil),
	}
}

func _Resource_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Resource)
	// Template
	switch x := m.Template.(type) {
	case *Resource_None:
		b.EncodeVarint(500<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.None); err != nil {
			return err
		}
	case *Resource_Vm:
		b.EncodeVarint(501<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Vm); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Resource.Template has unexpected type %T", x)
	}
	return nil
}

func _Resource_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Resource)
	switch tag {
	case 500: // Template.none
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(NoneTemplate)
		err := b.DecodeMessage(msg)
		m.Template = &Resource_None{msg}
		return true, err
	case 501: // Template.vm
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(VMTemplate)
		err := b.DecodeMessage(msg)
		m.Template = &Resource_Vm{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Resource_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Resource)
	// Template
	switch x := m.Template.(type) {
	case *Resource_None:
		s := proto.Size(x.None)
		n += proto.SizeVarint(500<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Resource_Vm:
		s := proto.Size(x.Vm)
		n += proto.SizeVarint(501<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type NoneTemplate struct {
}

func (m *NoneTemplate) Reset()                    { *m = NoneTemplate{} }
func (m *NoneTemplate) String() string            { return proto.CompactTextString(m) }
func (*NoneTemplate) ProtoMessage()               {}
func (*NoneTemplate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type VMTemplate struct {
	Vcpu             int32  `protobuf:"varint,1,opt,name=vcpu" json:"vcpu,omitempty"`
	MemoryGb         int32  `protobuf:"varint,2,opt,name=memory_gb,json=memoryGb" json:"memory_gb,omitempty"`
	ImageTemplateUri string `protobuf:"bytes,3,opt,name=image_template_uri,json=imageTemplateUri" json:"image_template_uri,omitempty"`
}

func (m *VMTemplate) Reset()                    { *m = VMTemplate{} }
func (m *VMTemplate) String() string            { return proto.CompactTextString(m) }
func (*VMTemplate) ProtoMessage()               {}
func (*VMTemplate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *VMTemplate) GetVcpu() int32 {
	if m != nil {
		return m.Vcpu
	}
	return 0
}

func (m *VMTemplate) GetMemoryGb() int32 {
	if m != nil {
		return m.MemoryGb
	}
	return 0
}

func (m *VMTemplate) GetImageTemplateUri() string {
	if m != nil {
		return m.ImageTemplateUri
	}
	return ""
}

func init() {
	proto.RegisterType((*Instance)(nil), "model.Instance")
	proto.RegisterType((*InstanceState)(nil), "model.InstanceState")
	proto.RegisterType((*Resource)(nil), "model.Resource")
	proto.RegisterType((*NoneTemplate)(nil), "model.NoneTemplate")
	proto.RegisterType((*VMTemplate)(nil), "model.VMTemplate")
	proto.RegisterEnum("model.ResourceType", ResourceType_name, ResourceType_value)
	proto.RegisterEnum("model.InstanceState_State", InstanceState_State_name, InstanceState_State_value)
	proto.RegisterEnum("model.Resource_State", Resource_State_name, Resource_State_value)
}

func init() { proto.RegisterFile("model.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 550 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x93, 0x4f, 0x8f, 0x93, 0x40,
	0x18, 0xc6, 0x0b, 0x85, 0x2e, 0x7d, 0x5b, 0x1b, 0x1c, 0x35, 0x69, 0x6a, 0xcc, 0x36, 0xc4, 0xc4,
	0x75, 0x35, 0x60, 0xba, 0x27, 0xe3, 0xa9, 0x9b, 0x92, 0x2e, 0x87, 0xd2, 0x75, 0x0a, 0x6b, 0xe2,
	0x85, 0x50, 0x18, 0x59, 0x62, 0x61, 0x08, 0x0c, 0xcd, 0x36, 0x7e, 0x0a, 0xbf, 0xab, 0x1e, 0xbc,
	0x19, 0x06, 0xc8, 0x76, 0xfd, 0x73, 0x9b, 0xf7, 0x7d, 0x7e, 0x3c, 0xef, 0xcc, 0x33, 0x03, 0x0c,
	0x12, 0x1a, 0x92, 0x9d, 0x9e, 0xe5, 0x94, 0x51, 0x24, 0xf3, 0x62, 0xf2, 0x21, 0x8a, 0xd9, 0x6d,
	0xb9, 0xd5, 0x03, 0x9a, 0x18, 0x11, 0xdd, 0xf9, 0x69, 0x64, 0x70, 0x7d, 0x5b, 0x7e, 0x31, 0x32,
	0x76, 0xc8, 0x48, 0x61, 0xb0, 0x38, 0x21, 0x05, 0xf3, 0x93, 0xec, 0x7e, 0x55, 0x7b, 0x68, 0xdf,
	0x05, 0x50, 0xac, 0xb4, 0x60, 0x7e, 0x1a, 0x10, 0x34, 0x02, 0x31, 0x0e, 0xc7, 0xc2, 0x54, 0x38,
	0xeb, 0x63, 0x31, 0x0e, 0xd1, 0x29, 0x0c, 0xc8, 0x1d, 0x09, 0x4a, 0x46, 0x73, 0x2f, 0x0e, 0xc7,
	0x22, 0x17, 0xa0, 0x6d, 0x59, 0x1c, 0xc8, 0x49, 0x41, 0xcb, 0x3c, 0x20, 0x15, 0xd0, 0xad, 0x81,
	0xb6, 0x65, 0x85, 0xe8, 0x02, 0x60, 0xe7, 0x17, 0xcc, 0x2b, 0x98, 0xcf, 0xc8, 0x58, 0x9a, 0x0a,
	0x67, 0x83, 0xd9, 0x53, 0xbd, 0x3e, 0x44, 0x3b, 0x76, 0x53, 0x69, 0xb8, 0x5f, 0x71, 0x7c, 0xa9,
	0xfd, 0x12, 0xe0, 0xd1, 0x03, 0x11, 0xbd, 0x03, 0xb9, 0x76, 0xa8, 0xf6, 0x36, 0x9a, 0x4d, 0xfe,
	0xe5, 0xa0, 0xd7, 0x3e, 0x35, 0x88, 0xde, 0x03, 0x04, 0x39, 0xf1, 0x19, 0x09, 0x3d, 0x9f, 0xf1,
	0x9d, 0x0f, 0x66, 0x13, 0x3d, 0xa2, 0x34, 0xda, 0x11, 0xbd, 0x8d, 0x47, 0x77, 0xda, 0x34, 0x70,
	0xbf, 0xa1, 0xe7, 0x4c, 0xfb, 0x06, 0x72, 0x3d, 0x75, 0x04, 0x80, 0xcd, 0xa5, 0xb5, 0x71, 0x4c,
	0x6c, 0x2e, 0xd4, 0x0e, 0x02, 0xe8, 0x7d, 0x74, 0x4d, 0xd7, 0x5c, 0xa8, 0x02, 0x1a, 0x82, 0xb2,
	0x71, 0xe6, 0xd8, 0xb1, 0xec, 0xa5, 0x2a, 0xa2, 0x01, 0x9c, 0x60, 0xd7, 0xb6, 0xab, 0xa2, 0x5b,
	0x4b, 0xeb, 0xeb, 0xeb, 0xaa, 0x92, 0x2a, 0x89, 0x57, 0xe6, 0x42, 0x95, 0x91, 0x0a, 0xc3, 0xcd,
	0x95, 0xeb, 0x54, 0x5f, 0x2d, 0xd6, 0x9f, 0x6c, 0xb5, 0x57, 0xcd, 0x70, 0x4c, 0xbc, 0xb2, 0xec,
	0xb9, 0x63, 0x2e, 0xd4, 0x93, 0xea, 0xec, 0x0a, 0x6e, 0xf2, 0xfb, 0xeb, 0x3e, 0x5e, 0x81, 0x54,
	0xdd, 0x27, 0x3f, 0xce, 0x68, 0xf6, 0xa4, 0x49, 0xa1, 0xc5, 0x9d, 0x43, 0x46, 0x30, 0x07, 0xd0,
	0x9b, 0x36, 0xaf, 0x2e, 0x27, 0x9f, 0xfd, 0x41, 0x3e, 0x8c, 0xea, 0x1c, 0xa4, 0x94, 0xa6, 0x64,
	0xfc, 0xa3, 0xcb, 0x53, 0x6a, 0x6d, 0x6d, 0x9a, 0x12, 0x87, 0x24, 0xd9, 0xce, 0x67, 0xe4, 0xaa,
	0x83, 0x39, 0x83, 0x5e, 0x82, 0xb8, 0x4f, 0xc6, 0x3f, 0x6b, 0xf2, 0x71, 0x43, 0xde, 0xac, 0x8e,
	0x38, 0x71, 0x9f, 0x68, 0xaf, 0xff, 0x97, 0xa0, 0x0a, 0x43, 0xd7, 0x3e, 0xea, 0x08, 0x97, 0x00,
	0x4a, 0xfb, 0xb1, 0x36, 0x82, 0xe1, 0xf1, 0x50, 0xed, 0x2b, 0xc0, 0xbd, 0x35, 0x42, 0x20, 0xed,
	0x83, 0xac, 0xe4, 0x71, 0xc8, 0x98, 0xaf, 0xd1, 0x73, 0xe8, 0x27, 0x24, 0xa1, 0xf9, 0xc1, 0x8b,
	0xb6, 0x3c, 0x15, 0x19, 0x2b, 0x75, 0x63, 0xb9, 0x45, 0x6f, 0x01, 0xc5, 0x89, 0x1f, 0x11, 0x8f,
	0x35, 0x16, 0x5e, 0x99, 0xc7, 0xcd, 0x1b, 0x55, 0xb9, 0xd2, 0x7a, 0xbb, 0x79, 0x7c, 0x3e, 0x85,
	0xe1, 0x71, 0x90, 0x48, 0x01, 0xc9, 0x5e, 0xdb, 0xa6, 0xda, 0x41, 0x3d, 0x10, 0x6f, 0x56, 0xaa,
	0x70, 0x79, 0xfa, 0xf9, 0xc5, 0xd1, 0x9f, 0xe6, 0xdf, 0x15, 0xb7, 0x06, 0xcd, 0x48, 0xba, 0x0f,
	0x03, 0x83, 0xe7, 0xb0, 0xed, 0xf1, 0x77, 0x75, 0xf1, 0x3b, 0x00, 0x00, 0xff, 0xff, 0xe0, 0x09,
	0x84, 0xb2, 0xa5, 0x03, 0x00, 0x00,
}
