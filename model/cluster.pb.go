// Code generated by protoc-gen-go.
// source: cluster.proto
// DO NOT EDIT!

package model

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Console_Transport int32

const (
	Console_SSH Console_Transport = 0
)

var Console_Transport_name = map[int32]string{
	0: "SSH",
}
var Console_Transport_value = map[string]int32{
	"SSH": 0,
}

func (x Console_Transport) String() string {
	return proto.EnumName(Console_Transport_name, int32(x))
}
func (Console_Transport) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 0} }

type NodeState_State int32

const (
	NodeState_REGISTERED NodeState_State = 0
)

var NodeState_State_name = map[int32]string{
	0: "REGISTERED",
}
var NodeState_State_value = map[string]int32{
	"REGISTERED": 0,
}

func (x NodeState_State) String() string {
	return proto.EnumName(NodeState_State_name, int32(x))
}
func (NodeState_State) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{3, 0} }

type Console struct {
	Type     Console_Transport `protobuf:"varint,1,opt,name=type,enum=model.Console_Transport" json:"type,omitempty"`
	BindAddr string            `protobuf:"bytes,2,opt,name=bind_addr" json:"bind_addr,omitempty"`
}

func (m *Console) Reset()                    { *m = Console{} }
func (m *Console) String() string            { return proto.CompactTextString(m) }
func (*Console) ProtoMessage()               {}
func (*Console) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Console) GetType() Console_Transport {
	if m != nil {
		return m.Type
	}
	return Console_SSH
}

func (m *Console) GetBindAddr() string {
	if m != nil {
		return m.BindAddr
	}
	return ""
}

type ExecutorNode struct {
	NodeId       string                     `protobuf:"bytes,1,opt,name=node_id" json:"node_id,omitempty"`
	CreatedAt    *google_protobuf.Timestamp `protobuf:"bytes,2,opt,name=created_at" json:"created_at,omitempty"`
	Console      *Console                   `protobuf:"bytes,3,opt,name=console" json:"console,omitempty"`
	GrpcAddr     string                     `protobuf:"bytes,4,opt,name=grpc_addr" json:"grpc_addr,omitempty"`
	LastState    *NodeState                 `protobuf:"bytes,5,opt,name=last_state" json:"last_state,omitempty"`
	MesosSlaveId string                     `protobuf:"bytes,6,opt,name=mesos_slave_id" json:"mesos_slave_id,omitempty"`
}

func (m *ExecutorNode) Reset()                    { *m = ExecutorNode{} }
func (m *ExecutorNode) String() string            { return proto.CompactTextString(m) }
func (*ExecutorNode) ProtoMessage()               {}
func (*ExecutorNode) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *ExecutorNode) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *ExecutorNode) GetCreatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *ExecutorNode) GetConsole() *Console {
	if m != nil {
		return m.Console
	}
	return nil
}

func (m *ExecutorNode) GetGrpcAddr() string {
	if m != nil {
		return m.GrpcAddr
	}
	return ""
}

func (m *ExecutorNode) GetLastState() *NodeState {
	if m != nil {
		return m.LastState
	}
	return nil
}

func (m *ExecutorNode) GetMesosSlaveId() string {
	if m != nil {
		return m.MesosSlaveId
	}
	return ""
}

type SchedulerNode struct {
	Id        string                     `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	CreatedAt *google_protobuf.Timestamp `protobuf:"bytes,2,opt,name=created_at" json:"created_at,omitempty"`
}

func (m *SchedulerNode) Reset()                    { *m = SchedulerNode{} }
func (m *SchedulerNode) String() string            { return proto.CompactTextString(m) }
func (*SchedulerNode) ProtoMessage()               {}
func (*SchedulerNode) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *SchedulerNode) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SchedulerNode) GetCreatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

type NodeState struct {
	State     NodeState_State            `protobuf:"varint,1,opt,name=state,enum=model.NodeState_State" json:"state,omitempty"`
	CreatedAt *google_protobuf.Timestamp `protobuf:"bytes,2,opt,name=created_at" json:"created_at,omitempty"`
}

func (m *NodeState) Reset()                    { *m = NodeState{} }
func (m *NodeState) String() string            { return proto.CompactTextString(m) }
func (*NodeState) ProtoMessage()               {}
func (*NodeState) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *NodeState) GetState() NodeState_State {
	if m != nil {
		return m.State
	}
	return NodeState_REGISTERED
}

func (m *NodeState) GetCreatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func init() {
	proto.RegisterType((*Console)(nil), "model.Console")
	proto.RegisterType((*ExecutorNode)(nil), "model.ExecutorNode")
	proto.RegisterType((*SchedulerNode)(nil), "model.SchedulerNode")
	proto.RegisterType((*NodeState)(nil), "model.NodeState")
	proto.RegisterEnum("model.Console_Transport", Console_Transport_name, Console_Transport_value)
	proto.RegisterEnum("model.NodeState_State", NodeState_State_name, NodeState_State_value)
}

func init() { proto.RegisterFile("cluster.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 393 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x92, 0xb1, 0x6f, 0xd4, 0x30,
	0x14, 0xc6, 0x7b, 0xd7, 0x5e, 0x4f, 0x79, 0xd0, 0xe8, 0x64, 0x21, 0x88, 0x2a, 0x10, 0x55, 0x06,
	0x74, 0x43, 0xe5, 0xa0, 0xb2, 0xc1, 0x06, 0x44, 0xc0, 0xc2, 0xe0, 0xdc, 0x04, 0x43, 0xe4, 0xd8,
	0x8f, 0x5c, 0x84, 0x13, 0x47, 0xb6, 0x53, 0x95, 0x7f, 0x80, 0x91, 0xbf, 0x19, 0xc5, 0x6e, 0xd2,
	0x6b, 0xd7, 0x6e, 0xc9, 0xf7, 0x3e, 0x7f, 0xef, 0xfb, 0x39, 0x81, 0x33, 0xa1, 0x06, 0xeb, 0xd0,
	0xd0, 0xde, 0x68, 0xa7, 0xc9, 0xaa, 0xd5, 0x12, 0xd5, 0xf9, 0x87, 0xba, 0x71, 0xfb, 0xa1, 0xa2,
	0x42, 0xb7, 0x59, 0xad, 0x15, 0xef, 0xea, 0xcc, 0xcf, 0xab, 0xe1, 0x57, 0xd6, 0xbb, 0x3f, 0x3d,
	0xda, 0xcc, 0x35, 0x2d, 0x5a, 0xc7, 0xdb, 0xfe, 0xee, 0x29, 0x64, 0xa4, 0xbf, 0x61, 0xfd, 0x49,
	0x77, 0x56, 0x2b, 0x24, 0x97, 0x70, 0x32, 0xba, 0x93, 0xc5, 0xc5, 0x62, 0x1b, 0x5f, 0x25, 0xd4,
	0xa7, 0xd3, 0xdb, 0x29, 0xdd, 0x19, 0xde, 0xd9, 0x5e, 0x1b, 0xc7, 0xbc, 0x8b, 0xbc, 0x84, 0xa8,
	0x6a, 0x3a, 0x59, 0x72, 0x29, 0x4d, 0xb2, 0xbc, 0x58, 0x6c, 0x23, 0x76, 0x27, 0xa4, 0xcf, 0x20,
	0x9a, 0x0f, 0x90, 0x35, 0x1c, 0x17, 0xc5, 0xd7, 0xcd, 0x51, 0xfa, 0x77, 0x09, 0x4f, 0xf3, 0x1b,
	0x14, 0x83, 0xd3, 0xe6, 0xbb, 0x96, 0x48, 0x12, 0x58, 0x77, 0x5a, 0x62, 0xd9, 0x48, 0xbf, 0x35,
	0x62, 0xd3, 0x2b, 0x79, 0x0f, 0x20, 0x0c, 0x72, 0x87, 0xb2, 0xe4, 0xce, 0xe7, 0x3f, 0xb9, 0x3a,
	0xa7, 0xb5, 0xd6, 0xb5, 0x42, 0x3a, 0xe1, 0xd1, 0xdd, 0x44, 0xc3, 0x0e, 0xdc, 0x64, 0x0b, 0x6b,
	0x11, 0x5a, 0x27, 0xc7, 0xfe, 0x60, 0x7c, 0x9f, 0x85, 0x4d, 0xe3, 0x11, 0xa2, 0x36, 0xbd, 0x08,
	0x10, 0x27, 0x01, 0x62, 0x16, 0xc8, 0x5b, 0x00, 0xc5, 0xad, 0x2b, 0xad, 0xe3, 0x0e, 0x93, 0x95,
	0x8f, 0xda, 0xdc, 0x46, 0x8d, 0xf5, 0x8b, 0x51, 0x67, 0x07, 0x1e, 0xf2, 0x06, 0xe2, 0x16, 0xad,
	0xb6, 0xa5, 0x55, 0xfc, 0xda, 0x63, 0x9d, 0xfa, 0xd0, 0x07, 0x6a, 0xfa, 0x13, 0xce, 0x0a, 0xb1,
	0x47, 0x39, 0x28, 0x0c, 0x17, 0x11, 0xc3, 0x72, 0xbe, 0x83, 0xe5, 0xe3, 0xf0, 0xd3, 0x7f, 0x0b,
	0x88, 0xe6, 0x7a, 0xe4, 0x12, 0x56, 0xa1, 0x7f, 0xf8, 0xac, 0xcf, 0x1f, 0xf6, 0xa7, 0x81, 0x22,
	0x98, 0x1e, 0xb5, 0xf7, 0x05, 0xac, 0xc2, 0xca, 0x18, 0x80, 0xe5, 0x5f, 0xbe, 0x15, 0xbb, 0x9c,
	0xe5, 0x9f, 0x37, 0x47, 0x1f, 0x5f, 0xff, 0x78, 0x75, 0xf0, 0x8b, 0xf2, 0x1b, 0xbb, 0xcf, 0x74,
	0x8f, 0xdd, 0xb5, 0x14, 0x99, 0x2f, 0x53, 0x9d, 0xfa, 0xe4, 0x77, 0xff, 0x03, 0x00, 0x00, 0xff,
	0xff, 0x57, 0xe0, 0xe3, 0xb4, 0xe0, 0x02, 0x00, 0x00,
}
